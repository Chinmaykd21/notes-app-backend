version: "3.8"
services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis_cache
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_HOST}:${REDIS_PORT}:${REDIS_PORT}"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}" # Used by RabbitMQ clients
      - "${RABBITMQ_DASHBOARD_PORT}:${RABBITMQ_DASHBOARD_PORT}" # RabbitMQ management dashboard

# If we want to run this as a service then we can use this.
# fastApi:
#   build:
#   container_name: fastApi_app
#   restart: always
#   environment:
#     DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_db/${POSTGRES_DB}
#     REDIS_URL: redis://redis_cache:${REDIS_PORT}
#   ports:
#     - "8000": "8000"
#   depends_on:
#     - postgres
#     - redis
#     - rabbitmq
# volumes:
#   postgres_data:
